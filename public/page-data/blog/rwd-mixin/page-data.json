{"componentChunkName":"component---src-templates-blog-post-tsx","path":"/blog/rwd-mixin","result":{"data":{"markdownRemark":{"html":"<h2>Założenia wstępne</h2>\n<p>Aby z łatwością zrozumieć i wdrożyć to co opiszę poniżej powinieneś:</p>\n<ul>\n<li>umieć korzystać z preprocesora SASS / SCSS w stopniu podstawowym</li>\n<li>wiedzieć czym jest funkcja</li>\n<li>rozumieć działanie <code class=\"language-text\">@media-queries</code></li>\n<li>znać CSS</li>\n<li>rozumieć koncepcję RWD (Responsive Web Design)</li>\n</ul>\n<h2>Problem</h2>\n<p>RWD w tych czasach jest absolutnym standardem (a przynajmniej powinno być).\nPraktycznie każdą webową apkę trzeba w jakiś sposób zmodyfikować na większych lub mniejszych rozdzielczościach. Zdarzają się projekty, w których dość sporo kodu jest umieszczana w regułach <code class=\"language-text\">media</code>. W wielu przypadkach standardowe style są pisane przy zachowaniu naturalnego flow - od góry do dołu a następnie poszczególne klasy są nadpisywane w blokach <code class=\"language-text\">media query</code> na dole pliku.\nWygląda do w sporym uproszczeniu w taki sposób.</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.nav</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> red<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token selector\">.intro</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 100px<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token selector\">.contact</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 200px<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token selector\">.footer</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> flex<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token comment\">/* Poniżej nadpisujemy reguły dla urządzeń mobilnych */</span>\n<span class=\"token atrule\"><span class=\"token rule\">@media</span> <span class=\"token punctuation\">(</span><span class=\"token property\">max-width</span><span class=\"token punctuation\">:</span> 760px<span class=\"token punctuation\">)</span></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token selector\">.nav</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> teal<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token selector\">.intro</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 200px<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token selector\">.contact</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 25px<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token selector\">.footer</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> block<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Nie ma dramatu w takim odchudzonym przykładzie, jednak przy nieco większej ilości kodu zmuszało mnie do scrollowania pliku od góry do dołu setki razy co przyprawiało mnie o oczopląs. Gdyby tylko był sposób na trzymanie kodu z bloków <code class=\"language-text\">media</code> razem z daną regułą...</p>\n<h2>Mixiny</h2>\n<p>Mixiny są zdecydowanie tematem na odrębny blog post, jednak na potrzeby tego wpisu przyjmijmy do informacji, że <code class=\"language-text\">@mixin</code> jest cudownym trikiem dostarczonym przez SASS-a, który pozwala nam definiować reguły CSS, które z łatwością będziemy mogli reużywać w naszej aplikacj.</p>\n<p>Tak się składa, żę dzieki mixinom możemy ugryźć temat modyfikacji związanych z RWD w dość ciekawy sposób. Spójrz na poniższy snippet.</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token atrule\"><span class=\"token rule\">@mixin</span> <span class=\"token function\">breakpoint</span><span class=\"token punctuation\">(</span>$point<span class=\"token punctuation\">)</span></span> <span class=\"token punctuation\">{</span>\n   <span class=\"token atrule\"><span class=\"token rule\">@if</span> $point == mobile</span> <span class=\"token punctuation\">{</span>\n     <span class=\"token atrule\"><span class=\"token rule\">@media</span> <span class=\"token punctuation\">(</span><span class=\"token property\">max-width</span><span class=\"token punctuation\">:</span> 760px<span class=\"token punctuation\">)</span></span> <span class=\"token punctuation\">{</span> <span class=\"token atrule\"><span class=\"token rule\">@content</span> <span class=\"token punctuation\">;</span></span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n   <span class=\"token atrule\"><span class=\"token rule\">@else</span> if $point == laptop</span> <span class=\"token punctuation\">{</span>\n     <span class=\"token atrule\"><span class=\"token rule\">@media</span> <span class=\"token punctuation\">(</span><span class=\"token property\">max-width</span><span class=\"token punctuation\">:</span> 1400px<span class=\"token punctuation\">)</span></span> <span class=\"token punctuation\">{</span> <span class=\"token atrule\"><span class=\"token rule\">@content</span> <span class=\"token punctuation\">;</span></span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">/* Tutaj możesz dopisać więcej breakpointów. Tylko nie przesadź :) */</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Stworzyliśmy wyżej mixin o nazwie <code class=\"language-text\">breakpoint</code>. Wygląda on trochę jak funkcja w JS prawda? Przyjmuje on parametr o nazwie <code class=\"language-text\">$point</code>. Wewnątrz naszej funkcji mamy instrukcję <code class=\"language-text\">if</code>. Sprawdza ona jaki parametr został dostarczony na wejściu i w oparciu o te wiedzę tworzy regułę <code class=\"language-text\">media</code>, która dodatkowo w swoim bloku kodu umieszcza <code class=\"language-text\">@content</code>. Dziwne co?\nWystarczy pokazać działanie tego mixina w akcji i wszystkie kropki się połączą.</p>\n<p>Powiedzmy, że chcemy sprawić aby nasz element o klasie <code class=\"language-text\">.box</code> zmieniał kolor w zależności od tego czy jesteśmy na małym czy może nieco większym urządzaniu.</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.box</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 50px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 50px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> red<span class=\"token punctuation\">;</span>\n  <span class=\"token atrule\"><span class=\"token rule\">@include</span> <span class=\"token function\">breakpoint</span><span class=\"token punctuation\">(</span>laptop<span class=\"token punctuation\">)</span></span><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> pink<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token atrule\"><span class=\"token rule\">@include</span> <span class=\"token function\">breakpoint</span><span class=\"token punctuation\">(</span>mobile<span class=\"token punctuation\">)</span></span><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> teal<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Stworzyliśmy wyżej regułę, która:</p>\n<ol>\n<li>Zmienia kolor tła na czerwony i zmienia rozmiary elementu</li>\n<li>Korzystając z naszego mixina wewnątrz swojego ciała zmienia zachowanie elementu na większych ekranach nadając mu różowy kolor tła.</li>\n<li>Również korzystając z mixina <code class=\"language-text\">breakpoint</code> zmienia tło  elementu <code class=\"language-text\">.box</code>, jednak na nieco mniejszych ekranach.</li>\n</ol>\n<p>Masz już pomysł co jest tym magicznym <code class=\"language-text\">@content</code>, o ktorym wspomniałem wyżej ?\nSą nim poszczególne style jakie wrzucamy do środka naszego mixina podczaj gdy go używamy. Biorąc pod uwagę poprzedni przykład:</p>\n<ul>\n<li><code class=\"language-text\">background-color: pink;</code> stał się <code class=\"language-text\">@content</code>-em dla <code class=\"language-text\">breakpoint(laptop)</code></li>\n<li><code class=\"language-text\">background-color: teal;</code> stał się <code class=\"language-text\">@content</code>-em dla <code class=\"language-text\">breakpoint(mobile)</code></li>\n</ul>\n<p>CodePen z przykładem znajdziesz poniżej. Pobaw się rozmiarami okna przeglądarki i zauważ, że element zachowuje się tak jak chcieliśmy.</p>\n<p><a href=\"https://codepen.io/AdamKniec/pen/OJmQZeR\" target=\"_blank\">CodePen pokazujący działanie mixina</a></p>\n<h2>Podsumowanie</h2>\n<p>Wpisem tym chciałem Ci pokazać prawdopodobnie jedno z wielu podejść do tematu RWD. Mi osobiście podoba się idea mixina, który wewnątrz reguły informuje nas jak powinien wyglądać / zachować się element na ekranie o danej rozdzielczości.\nMimo wszystko pamiętaj o tym, żeby nie traktować tego sposobu jako jedynej słusznej drogi.</p>\n<p>Na koniec małe porównanie podejścia z mixinem i z regułami <code class=\"language-text\">@media</code> na dole pliku. Oba snippety modyfikują element w taki sam sposób.</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token comment\">/* Mixin breakpoint musi być dostępny w pliku tej reguły. Albo go tam wrzuć albo zaimportuj z innego pliku :) */</span>\n<span class=\"token selector\">.box</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 50px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 50px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> red<span class=\"token punctuation\">;</span>\n  <span class=\"token atrule\"><span class=\"token rule\">@include</span> <span class=\"token function\">breakpoint</span><span class=\"token punctuation\">(</span>laptop<span class=\"token punctuation\">)</span></span><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> pink<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token atrule\"><span class=\"token rule\">@include</span> <span class=\"token function\">breakpoint</span><span class=\"token punctuation\">(</span>mobile<span class=\"token punctuation\">)</span></span><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> teal<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.box</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 50px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 50px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> red<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token atrule\"><span class=\"token rule\">@media</span> <span class=\"token punctuation\">(</span><span class=\"token property\">max-width</span><span class=\"token punctuation\">:</span> 1400px<span class=\"token punctuation\">)</span></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token selector\">.box</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> pink<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  \n<span class=\"token punctuation\">}</span>\n\n<span class=\"token atrule\"><span class=\"token rule\">@media</span> <span class=\"token punctuation\">(</span><span class=\"token property\">max-width</span><span class=\"token punctuation\">:</span> 760px<span class=\"token punctuation\">)</span></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token selector\">.box</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> teal<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2>Źródła</h2>\n<p><a href=\"https://responsivedesign.is/articles/helpful-sass-mixins/\" target=\"_blank\">responsivedesign.is/articles/helpful-sass-mixins/</a></p>","frontmatter":{"path":"/blog/rwd-mixin","readTime":"5","title":"RWD Mixin","author":"Adam Kniec","tags":["CSS"],"date":"2021-08-11","description":"Boli Mnie Web - RWD Mixin"}}},"pageContext":{}},"staticQueryHashes":["63159454"]}